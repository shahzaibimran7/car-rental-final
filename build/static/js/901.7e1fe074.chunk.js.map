{"version":3,"file":"static/js/901.7e1fe074.chunk.js","mappings":"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","sources":["components/CreateCar/CreateCar.jsx","Pages/AddCar.jsx","services/car-api-services.js"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./CreateCar.css\";\r\nimport { CreateOneCar } from \"../../services/car-api-services\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Car Name is required\"),\r\n  price: Yup.number().required(\"Price is required\"),\r\n  brand: Yup.string().required(\"Brand is required\"),\r\n  transmission: Yup.string().required(\"Transmission is required\"),\r\n  fuel: Yup.string().required(\"Fuel Type is required\"),\r\n  doors: Yup.number().required(\"Number of Doors is required\"),\r\n});\r\n\r\nconst brands = [\r\n  \"Mercedes\",\r\n  \"BMW\",\r\n  \"Audi\",\r\n  \"Lexus\",\r\n  \"Tesla\",\r\n  \"Bentley\",\r\n  \"Toyota\",\r\n  \"Cadillac Escalade\",\r\n  \"Chevrolet\",\r\n  \"Ferrari\",\r\n  \"Ford\",\r\n  \"GMC\",\r\n  \"Jeep\",\r\n  \"Mini Cooper\",\r\n  \"Nissan\",\r\n  \"Porsche\",\r\n  \"Range Rover\",\r\n  \"Rolls Royce\",\r\n  \"KIA\",\r\n  \"Maserati\",\r\n  \"Yachts\",\r\n];\r\nconst transmissions = [\"Automatic\", \"Manual\"];\r\nconst fuelTypes = [\"Petrol\", \"Diesel\", \"Electric\"];\r\nfunction CreateCar() {\r\n  const handleIcon = async (e, setFieldValue) => {\r\n    const file = e.target.files[0];\r\n    setFieldValue(\"image\", file);\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    const formData = new FormData();\r\n\r\n    for (const key in values) {\r\n      formData.append(key, values[key]);\r\n    }\r\n\r\n    const response = await CreateOneCar(formData);\r\n    if (response.status === 200) {\r\n      alert(\"Car Created Successfully\");\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          image: null,\r\n          price: \"\",\r\n          brand: \"\",\r\n          transmission: \"\",\r\n          fuel: \"\",\r\n          doors: \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {() => (\r\n          <Form className=\"signup-form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Car Name:</label>\r\n              <Field type=\"text\" name=\"name\" id=\"carName\" />\r\n              <ErrorMessage name=\"name\" component=\"div\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"image\">Image:</label>\r\n              <Field name=\"image\">\r\n                {({ form, field }) => {\r\n                  const { setFieldValue } = form;\r\n                  return (\r\n                    <input\r\n                      type=\"file\"\r\n                      required\r\n                      onChange={(e) => handleIcon(e, setFieldValue)}\r\n                    />\r\n                  );\r\n                }}\r\n              </Field>{\" \"}\r\n              <ErrorMessage name=\"image\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"price\">Price:</label>\r\n              <Field type=\"number\" name=\"price\" id=\"price\" />\r\n              <ErrorMessage name=\"price\" component=\"div\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"brand\">Brand:</label>\r\n              <Field as=\"select\" name=\"brand\" id=\"brand\">\r\n                <option value=\"\">Select Brand</option>\r\n                {brands.map((brand) => (\r\n                  <option key={brand} value={brand}>\r\n                    {brand}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n              <ErrorMessage name=\"brand\" component=\"div\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"transmission\">Transmission:</label>\r\n              <Field as=\"select\" name=\"transmission\" id=\"transmission\">\r\n                <option value=\"\">Select Transmission</option>\r\n                {transmissions.map((transmission) => (\r\n                  <option key={transmission} value={transmission}>\r\n                    {transmission}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n              <ErrorMessage\r\n                name=\"transmission\"\r\n                component=\"div\"\r\n                className=\"error\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"fuel\">Fuel Type:</label>\r\n              <Field as=\"select\" name=\"fuel\" id=\"fuelType\">\r\n                <option value=\"\">Select Fuel Type</option>\r\n                {fuelTypes.map((fuelType) => (\r\n                  <option key={fuelType} value={fuelType}>\r\n                    {fuelType}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n              <ErrorMessage name=\"fuel\" component=\"div\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"doors\">Number of Doors:</label>\r\n              <Field type=\"number\" name=\"doors\" id=\"doors\" />\r\n              <ErrorMessage name=\"doors\" component=\"div\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button type=\"submit\">Create</button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateCar;\r\n","import React from \"react\";\r\nimport CreateCar from \"../components/CreateCar/CreateCar\";\r\n\r\nconst AddCar = () => {\r\n  return (\r\n    <div>\r\n      <CreateCar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCar;\r\n","import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"https://app.fiftyfivecarrental.com/car/\",\r\n});\r\nconst GetCars = () => {\r\n  return instance.get(`getAllCars`);\r\n};\r\n\r\nconst GetCarsPaginated = (query) => {\r\n  return instance.get(`getAllCars${query}`);\r\n};\r\nconst GetCarsByBrand = (brand) => {\r\n  return instance.get(`getCarsByBrand/${brand}`);\r\n};\r\nconst GetCar = (id) => {\r\n  return instance.get(`getAllDetails/${id}`);\r\n};\r\nconst CreateOneCar = (car) => {\r\n  return instance.post(\"createCar\", car);\r\n};\r\nconst UpdateCar = (id, car) => {\r\n  return instance.post(`updateCarById/${id}`, car);\r\n};\r\nconst DeleteCar = (id) => {\r\n  return instance.post(`deleteCarById/${id}`);\r\n};\r\nconst AdditionalImage = (image) => {\r\n  return axios.post(\r\n    `https://app.fiftyfivecarrental.com/carImage/uploadImage`,\r\n    image\r\n  );\r\n};\r\nexport {\r\n  GetCars,\r\n  GetCar,\r\n  GetCarsPaginated,\r\n  CreateOneCar,\r\n  UpdateCar,\r\n  DeleteCar,\r\n  AdditionalImage,\r\n  GetCarsByBrand,\r\n};\r\n"],"names":["validationSchema","Yup","shape","name","required","price","brand","transmission","fuel","doors","brands","transmissions","fuelTypes","handleIcon","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","setFieldValue","file","wrap","_context","prev","next","target","files","stop","_x","_x2","apply","arguments","handleSubmit","_ref2","_callee2","values","formData","key","_context2","FormData","append","CreateOneCar","sent","status","alert","window","location","reload","_x3","_jsx","className","children","Formik","initialValues","image","onSubmit","_jsxs","Form","htmlFor","Field","type","id","ErrorMessage","component","_ref3","form","field","onChange","as","value","map","fuelType","CreateCar","instance","axios","create","baseURL","GetCars","get","GetCarsPaginated","query","concat","GetCarsByBrand","GetCar","car","post","DeleteCar","AdditionalImage"],"sourceRoot":""}