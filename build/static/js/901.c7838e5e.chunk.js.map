{"version":3,"file":"static/js/901.c7838e5e.chunk.js","mappings":"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","sources":["components/CreateCar/CreateCar.jsx","Pages/AddCar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./CreateCar.css\";\r\nimport { CreateOneCar } from \"../../services/car-api-services\";\r\nimport imageCompression from \"browser-image-compression\";\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Car Name is required\"),\r\n  price: Yup.number().required(\"Price is required\"),\r\n  brand: Yup.string().required(\"Brand is required\"),\r\n  transmission: Yup.string().required(\"Transmission is required\"),\r\n  fuel: Yup.string().required(\"Fuel Type is required\"),\r\n  doors: Yup.number().required(\"Number of Doors is required\"),\r\n});\r\n\r\nconst brands = [\r\n  \"Mercedes\",\r\n  \"BMW\",\r\n  \"Audi\",\r\n  \"Lexus\",\r\n  \"Tesla\",\r\n  \"Bentley\",\r\n  \"Toyota\",\r\n  \"Cadillac Escalade\",\r\n  \"Chevrolet\",\r\n  \"Ferrari\",\r\n  \"Ford\",\r\n  \"GMC\",\r\n  \"Jeep\",\r\n  \"Mini Cooper\",\r\n  \"Nissan\",\r\n  \"Porsche\",\r\n  \"Range Rover\",\r\n  \"Rolls Royce\",\r\n  \"KIA\",\r\n  \"Maserati\",\r\n  \"Yachts\",\r\n];\r\nconst transmissions = [\"Automatic\", \"Manual\"];\r\nconst fuelTypes = [\"Petrol\", \"Diesel\", \"Electric\"];\r\nfunction CreateCar() {\r\n  const handleIcon = async (e, setFieldValue) => {\r\n    const file = e.target.files[0];\r\n    const options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: true,\r\n    };\r\n    const compressedFile = await imageCompression(file, options);\r\n    console.log(compressedFile);\r\n    setFieldValue(\"image\", compressedFile);\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    const formData = new FormData();\r\n\r\n    for (const key in values) {\r\n      formData.append(key, values[key]);\r\n    }\r\n    console.log(\"FORMDATA\", formData.get(\"image\"));\r\n    const response = await CreateOneCar(formData);\r\n    if (response.status === 200) {\r\n      alert(\"Car Created Successfully\");\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          image: null,\r\n          price: \"\",\r\n          brand: \"\",\r\n          transmission: \"\",\r\n          fuel: \"\",\r\n          doors: \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {() => (\r\n          <Form className=\"signup-form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Car Name:</label>\r\n              <Field type=\"text\" name=\"name\" id=\"carName\" />\r\n              <ErrorMessage name=\"name\" component=\"div\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"image\">Image:</label>\r\n              <Field name=\"image\">\r\n                {({ form, field }) => {\r\n                  const { setFieldValue } = form;\r\n                  return (\r\n                    <input\r\n                      type=\"file\"\r\n                      required\r\n                      onChange={(e) => handleIcon(e, setFieldValue)}\r\n                    />\r\n                  );\r\n                }}\r\n              </Field>{\" \"}\r\n              <ErrorMessage name=\"image\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"price\">Price:</label>\r\n              <Field type=\"number\" name=\"price\" id=\"price\" />\r\n              <ErrorMessage name=\"price\" component=\"div\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"brand\">Brand:</label>\r\n              <Field as=\"select\" name=\"brand\" id=\"brand\">\r\n                <option value=\"\">Select Brand</option>\r\n                {brands.map((brand) => (\r\n                  <option key={brand} value={brand}>\r\n                    {brand}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n              <ErrorMessage name=\"brand\" component=\"div\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"transmission\">Transmission:</label>\r\n              <Field as=\"select\" name=\"transmission\" id=\"transmission\">\r\n                <option value=\"\">Select Transmission</option>\r\n                {transmissions.map((transmission) => (\r\n                  <option key={transmission} value={transmission}>\r\n                    {transmission}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n              <ErrorMessage\r\n                name=\"transmission\"\r\n                component=\"div\"\r\n                className=\"error\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"fuel\">Fuel Type:</label>\r\n              <Field as=\"select\" name=\"fuel\" id=\"fuelType\">\r\n                <option value=\"\">Select Fuel Type</option>\r\n                {fuelTypes.map((fuelType) => (\r\n                  <option key={fuelType} value={fuelType}>\r\n                    {fuelType}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n              <ErrorMessage name=\"fuel\" component=\"div\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"doors\">Number of Doors:</label>\r\n              <Field type=\"number\" name=\"doors\" id=\"doors\" />\r\n              <ErrorMessage name=\"doors\" component=\"div\" className=\"error\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button type=\"submit\">Create</button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateCar;\r\n","import React from \"react\";\r\nimport CreateCar from \"../components/CreateCar/CreateCar\";\r\n\r\nconst AddCar = () => {\r\n  return (\r\n    <div>\r\n      <CreateCar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCar;\r\n"],"names":["validationSchema","Yup","shape","name","required","price","brand","transmission","fuel","doors","brands","transmissions","fuelTypes","handleIcon","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","setFieldValue","file","options","compressedFile","wrap","_context","prev","next","target","files","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","sent","console","log","stop","_x","_x2","apply","arguments","handleSubmit","_ref2","_callee2","values","formData","key","_context2","FormData","append","get","CreateOneCar","status","alert","window","location","reload","_x3","_jsx","className","children","Formik","initialValues","image","onSubmit","_jsxs","Form","htmlFor","Field","type","id","ErrorMessage","component","_ref3","form","field","onChange","as","value","map","fuelType","CreateCar"],"sourceRoot":""}